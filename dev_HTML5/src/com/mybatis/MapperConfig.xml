<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
 PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-config.dtd">
<!-- MyBatis Manual page 3 -->
<configuration>
	<environments default="development">
		<environment id="development">
			<transactionManager type="JDBC" />
			<dataSource type="UNPOOLED"><!-- POOL|UNPOOLED -->
		 	<!-- p6spy.jar 를 동작하게하는 스파이드라이버 ( 구동목적 : 서버측 생성로그 확인 )-->
				<!-- <property name="driver" value="oracle.jdbc.driver.OracleDriver" /> -->
	 		 	<property name="driver" value="com.p6spy.engine.spy.P6SpyDriver"/>
				<property name="url" value="jdbc:oracle:thin:@localhost:1521:orcl11" />
				<property name="username" value="scott" />
				<property name="password" value="tiger" />
			</dataSource>
		</environment>
	</environments>
	<mappers>
		<!-- src위치는 알기 때문에 이후 경로 씀 / 쿼리문을 담고있는 xml문서의 물리적인 위치 -->
		<!-- 반드시 경로 및 파일존재확인할것. FileNotFoundException 발생하고 서버기동이 안될수 있음 -->
		<mapper resource="com/mybatis/maps/book.xml"/>
		<mapper resource="com/mybatis/maps/dept.xml"/>
		<mapper resource="com/mybatis/maps/myBatisTest.xml"/>
	<!-- 없는것들은 일반 비워둠 	
		<mapper resource="com/mybatis/maps/order.xml" />
	-->
	</mappers>
</configuration>
<!--
		<namespace:tag>형태로 화면에서 구성하는 궁극적인 이유
		화면관리자가 보는 tag, 그러나 DB를 접속하고 사용하는 java코드가 화면에서도 보여야함
		tag를 다루기위해서 xml기반의 ORM 솔루션이 개발됨 ex.MyBatis
-->